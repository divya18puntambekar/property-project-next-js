// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int @id @default(autoincrement())
  name                 String
  email                String @unique
  username             String?
  password             String
  contact              String
  gender               String?
  image                String? 
  bookmarkedProperties Properties[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}

model Properties {
  id            Int @id @default(autoincrement())
  user          User @relation(fields: [userId], references: [id])
  userId        Int
  name          String
  description   String
  propertyType  String
  square_feet   Int
  house_no      String?
  street        String
  city          String
  state         String
  zipcode       String
  images         String[]
  weekly_rates  Int?
  monthly_rates Int?
  nightly_rates Int?
  amenities     String[]
  beds          Int
  baths         Int
  seller_name   String
  seller_email  String
  seller_phone  String
  propertyAmenities PropertyAmenities[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model PropertyTypeData {
  id    Int @id @default(autoincrement())
  name  String
}

model AmenitiesData {
  id            Int @id @default(autoincrement())
  name          String
  propertyAmenities PropertyAmenities[]
}

model PropertyAmenities {
  id            Int @id @default(autoincrement())
  property      Properties @relation(fields: [propertyId], references: [id])
  propertyId    Int
  amentiesData  AmenitiesData @relation(fields: [amentiesDataId], references: [id])
  amentiesDataId     Int
}